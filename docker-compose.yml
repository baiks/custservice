version: '3.8'

services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - imnetwork

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENER_NAME: INSIDE
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    ports:
      - "9093:9093"
      - "9092:9092"
    networks:
      - imnetwork

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    image: 682263059097.dkr.ecr.us-east-1.amazonaws.com/customer_service
    container_name: customer_service
    ports:
      - "8001:8001"
    depends_on:
      - kafka
    environment:
      MICRO_SERVICES_ACCOUNTS_URL: http://account_service:8002/account/
      MICRO_SERVICES_TRANSACTIONS_URL: http://transaction_service:8002/account/
      KAFKA_PRODUCER_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_PRODUCER_KEY_SERIALIZER: org.apache.kafka.common.serialization.StringSerializer
      KAFKA_PRODUCER_VALUE_SERIALIZER: org.apache.kafka.common.serialization.StringSerializer
      JWT_SECRET_KEY: baiksdev@2024
      JWT_JWTVALIDITY_PERIOD_IN_MILLI_SECS: 6000000
    networks:
      - imnetwork

networks:
  imnetwork:
    driver: bridge
