version: '3.8'

services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - imnetwork

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
#      KAFKA_ADVERTISED_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_MESSAGE_MAX_BYTES: 1000000
      KAFKA_REPLICA_FETCH_MAX_BYTES: 1000000
    ports:
      - "9092:9092"  # Internal network communication
      - "9093:9093"  # External network communication
    networks:
      - imnetwork

  mysql_db:
    image: mysql:latest
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: Baiks@123
      MYSQL_DATABASE: interview_im
      MYSQL_USER: baiks
      MYSQL_PASSWORD: Baiks@123
    ports:
      - "3307:3306"  # Mapping host port 3307 to container port 3306
    volumes:
      - data:/var/lib/mysql
    networks:
      - imnetwork

  customer_service:
    build:
      context: .
      dockerfile: Dockerfile
    image: 682263059097.dkr.ecr.us-east-1.amazonaws.com/customer-service
    container_name: customer_service
    ports:
      - "8001:8001"
    depends_on:
      - kafka
      - mysql_db
    environment:
      SPRING_PROFILES_ACTIVE: mysql
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql_db:3306/interview_im?createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: baiks
      SPRING_DATASOURCE_PASSWORD: Baiks@123
      SPRING_DATASOURCE_HIKARI_AUTOCOMMIT: "true"
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.MySQLDialect
      MICRO_SERVICES_ACCOUNTS_URL: http://account-service:8002/account/
      MICRO_SERVICES_TRANSACTIONS_URL: http://transaction-service:8003/transaction/
      KAFKA_PRODUCER_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_PRODUCER_KEY_SERIALIZER: org.apache.kafka.common.serialization.StringSerializer
      KAFKA_PRODUCER_VALUE_SERIALIZER: org.apache.kafka.common.serialization.StringSerializer
      JWT_SECRET_KEY: baiksdev@2024
      JWT_JWTVALIDITY_PERIOD_IN_MILLI_SECS: 6000000
    networks:
      - imnetwork

networks:
  imnetwork:
    driver: bridge

volumes:
  data: